{"version":3,"sources":["images/memories.png","constans/actionType.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","component","tags","map","tag","gutterBottom","CardContent","message","CardActions","a","api","data","type","payload","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","Memories","alt","Grow","in","justify","combineReducers","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8ca4753.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","// Action types constants \r\n\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\n\r\nexport const CREATE = 'CREATE';\r\n\r\nexport const UPDATE = 'UPDATE';\r\n\r\nexport const DELETE = 'DELETE';\r\n\r\nexport const LIKE = 'LIKE';\r\n\r\n","import axios from \"axios\";\r\n\r\n// index from api folder\r\n\r\nconst url ='https://memories-my-mern-project.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);  // get all posts\r\n\r\nexport const createPost = (newPost) => axios.post(url , newPost);  // add new post\r\n\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);  // update post \r\n\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);  // delete post \r\n\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);  // add like to post","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n  border: {\r\n    border: \"solid\",\r\n  },\r\n  fullHeightCard: {\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"15px\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  overlay2: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    right: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px\",\r\n  },\r\n  title: {\r\n    padding: \"0 16px\",\r\n  },\r\n  cardActions: {\r\n    padding: \"0 16px 8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport useStyles from \"./styles.js\"; // App Style\r\nimport {Card , CardActions , CardContent , CardMedia , Button , Typography} from '@material-ui/core'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport moment from \"moment\"\r\nimport { useDispatch } from \"react-redux\"; // use  'useDispatch' Hook\r\nimport { deletePost , likePost} from \"../../../actions/posts.js\"; // use  'useDispatch' Hook\r\n\r\n\r\n\r\n// Post from post file\r\n\r\nconst Post = ({post , setCurrentId}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n    <CardMedia  className={classes.media} image={post.selectedFile}  title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant='h6' >{post.creator}</Typography>\r\n        <Typography variant='body2' >{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{color:'white'}}  size=\"small\" onClick={()=>setCurrentId(post._id)}  >\r\n          <MoreHorizIcon fontSize=\"medium\"   />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n\r\n        <Typography variant='body2' color=\"textSecondary\" component=\"h2\" >{post.tags.map((tag)=> `#${tag} `)}</Typography>\r\n\r\n      </div>\r\n      <Typography className={classes.title} variant='h5' gutterBottom >{post.title}</Typography>\r\n      <CardContent>\r\n       <Typography  variant='body2' color='textSecondary' component='p' >{post.message}</Typography>\r\n      </CardContent>\r\n\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" onClick={ ()=> dispatch(likePost(post._id))} >\r\n          <ThumbUpAltIcon  fontSize=\"small\" />\r\n          &nbsp; Like &nbsp;\r\n          {post.likeCount}\r\n        </Button>\r\n\r\n        <Button size=\"small\" color=\"primary\" onClick={ ()=> dispatch(deletePost(post._id))} >\r\n          <DeleteIcon  fontSize=\"small\" />\r\n          Delete\r\n        </Button>\r\n      </CardActions>\r\n    \r\n\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import {FETCH_ALL , CREATE , UPDATE , DELETE , LIKE} from '../constans/actionType.js'\r\n\r\nimport * as api from \"../api\";\r\n\r\n// post from Actions folder \r\n\r\n// Fetch Posts \r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n \r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n// Add New Post \r\nexport const createPost = (post)=> async (dispatch) =>{\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n   \r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n// Update Post \r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n// Delete Post \r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n// add like to Post \r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {Grid , CircularProgress} from '@material-ui/core'\r\n\r\nimport Post from \"./Post/Post.js\";\r\nimport useStyles from \"./styles.js\"; // App Style\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n  return (\r\n    !posts.length?<CircularProgress/>:(\r\n      <Grid  container alignItems=\"stretch\" spacing={3}  >\r\n        {posts.map((post)=>(\r\n          <Grid item key={post._id} xs={12} sm={6}>\r\n            <Post post={post} setCurrentId={setCurrentId} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import React, { useState , useEffect } from \"react\";\r\nimport useStyles from \"./styles.js\"; // App Style\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch , useSelector } from \"react-redux\"; // use  'useDispatch' Hook\r\nimport { createPost , updatePost} from \"../../actions/posts.js\";\r\n\r\n\r\nconst Form = ({currentId , setCurrentId}) => {\r\n \r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect( ()=>{\r\n    if (post) {setPostData(post)}\r\n  } , [post])\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n    } else  {\r\n      dispatch(updatePost(currentId, postData));\r\n      console.log(currentId);\r\n    }\r\n    clear();\r\n  \r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.form}  ${classes.root}`}\r\n        onSubmit={handelSubmit}\r\n      >\r\n        <Typography variant=\"h6\">{currentId?`Editing` : `Creating`} a Memory</Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\r\n        />\r\n\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <Button className={classes.buttonSubmit} variant='contained' color='primary' type='submit' size='large' fullWidth >Submit</Button>\r\n        <Button  variant='contained' color='secondary' size='small' onClick={clear} fullWidth >Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    color: \"rgba(0,183,255, 1)\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n    height: \"60px\",\r\n  },\r\n  [theme.breakpoints.down('xs')]:{\r\n    mainContainer:{\r\n      flexDirection:'column-reverse'\r\n    },\r\n  }\r\n  \r\n}));\r\n","import React, { useEffect , useState } from \"react\";\r\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\"; // Block of Componants\r\nimport { useDispatch } from \"react-redux\"; // use  'useDispatch' Hook\r\n\r\nimport Memories from \"./images/memories.png\"; // Memories image\r\nimport { getPosts } from \"./actions/posts.js\"; // Memories image\r\nimport Posts from \"./components/Posts/Posts\"; // Posts Component\r\nimport Form from \"./components/Form/Form\"; // Form Component\r\nimport useStyles from \"./styles.js\"; // App Style\r\n\r\nconst App = () => {\r\n  const [currentId , setCurrentId] = useState(0)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId,dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n          Memories\r\n        </Typography>\r\n        <img className={classes.image} src={Memories} alt=\"Memories\" />\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid\r\n          className={classes.mainContainer}\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts  setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form  currentId={currentId} setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport posts from \"./posts.js\";\r\n\r\nexport default combineReducers({ posts });\r\n","// posts from reducers folder\r\n\r\nimport {FETCH_ALL , CREATE , UPDATE , DELETE , LIKE} from '../constans/actionType.js'\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    \r\n    case CREATE:\r\n      return [...posts , action.payload];\r\n  \r\n    case UPDATE:\r\n    case LIKE:\r\n      return posts.map( (post)=> post._id === action.payload._id ? action.payload : post);\r\n\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n      \r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport './index.css'\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}